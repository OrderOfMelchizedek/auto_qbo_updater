# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so
*.pyd
*.dll

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/  # Standard ignore, but ensure 'lib/' (project specific) is NOT ignored
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.log
.hypothesis/
.pytest_cache/

# Celery
celerybeat-schedule
*.pid

# Environments
.env
.env.*
!.env.example  # Keep .env.example in repo
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDEs
.idea/
.vscode/
*.project
*.pydevproject
.sublime-project
.sublime-workspace
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# VS Code specific
.history/
.vscode-test/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Operating System Files
.DS_Store
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Static and media files that might be generated or user-uploaded locally
# but a general rule would be to serve static from a CDN or define specifics
# staticfiles/
# mediafiles/

# Test data files (too large for version control)
src/tests/test_files/
*.pdf
*.jpg
*.jpeg
*.png

# Local storage and session data
uploaded_documents/
session_data/
session_data/auth_states/
session_data/tokens/

# Large frontend files (can be regenerated)
frontend/package-lock.json
